{"version":3,"sources":["components/Row.js","components/EmployeeTable.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Row","employee","id","name","first","last","email","src","picture","thumbnail","alt","EmployeeTable","employeeList","handleSort","className","Table","responsive","onClick","map","Search","searchWord","handleChange","setSearchWord","type","placeholder","value","onChange","App","useState","setEmployeeList","filteredEmployees","setFilteredEmployees","useEffect","axios","get","then","response","data","results","catch","error","console","log","event","inputSearch","target","filter","toLowerCase","includes","columnName","sortedEmployees","sortBy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAceA,MAZf,YAAgC,IAAjBC,EAAgB,EAAhBA,SACb,OAD6B,EAANC,GAEnB,+BACE,6BAAKD,EAASE,KAAKC,QACnB,6BAAKH,EAASE,KAAKE,OACnB,6BAAKJ,EAASK,QACd,6BACE,qBAAKC,IAAKN,EAASO,QAAQC,UAAWC,IAAKT,EAASE,KAAKC,c,gBCJpD,SAASO,EAAT,GAAsD,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACpD,OACE,qBAAKC,UAAU,iBAAf,SACE,eAACC,EAAA,EAAD,CAAOC,WAAW,KAAlB,UACE,gCACE,+BACE,oBAAIF,UAAU,YAAYG,QAAS,kBAAMJ,EAAW,eAApD,kBAGA,oBAAIC,UAAU,YAAYG,QAAS,kBAAMJ,EAAW,cAApD,oBAGA,oBAAIC,UAAU,YAAYG,QAAS,kBAAMJ,EAAW,UAApD,mBAGA,8CAGJ,gCACGD,EAAaM,KAAI,SAACjB,GACjB,OAAO,cAAC,EAAD,CAA0BA,SAAUA,GAA1BA,EAASK,iB,qBCIvBa,G,MA3BA,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAA2BC,GAAmB,EAAlCC,cAAkC,EAAnBD,cAC3C,OACE,sBAAKP,UAAU,kBAAf,UACE,qBAAKZ,GAAG,SAAR,SACE,sBAAKY,UAAU,WAAf,UACE,sBAAMA,UAAU,QAAhB,iCACA,uBAAMA,UAAU,eAAhB,sFAEQ,uBAFR,uFAQJ,qBAAKA,UAAU,SAAf,SACE,uBACEA,UAAU,YACVS,KAAK,OACLC,YAAY,wBACZC,MAAOL,EACPM,SAAUL,W,wBCmCLM,MA9Cf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNhB,EADM,KACQiB,EADR,OAEuBD,mBAAS,IAFhC,mBAENR,EAFM,KAEME,EAFN,OAGqCM,mBAAS,IAH9C,mBAGNE,EAHM,KAGaC,EAHb,KAkCb,OA7BAC,qBAAU,WACRC,IACGC,IAAI,yDACJC,MAAK,SAACC,GAELP,EAAgBO,EAASC,KAAKC,SAC9BP,EAAqBK,EAASC,KAAKC,YAEpCC,OAAM,SAACC,GAENC,QAAQC,IAAIF,QAEf,IAkBD,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,CACEO,aAlBe,SAACsB,GACpB,IAAMC,EAAcD,EAAME,OAAOpB,MACjCH,EAAcsB,GACd,IAAIN,EAAU1B,EAAakC,QAAO,SAAC7C,GAEjC,OADeA,EAASE,KAAKC,MAAM2C,cACrBC,SAASJ,EAAYG,kBAErChB,EAAqBO,IAYjBlB,WAAYA,EACZE,cAAeA,IAEjB,cAAC,EAAD,CAAeT,WAZA,SAACoC,GAClB,IAAMC,EAAkBC,IAAOrB,EAAmB,CAACmB,IACnDlB,EAAqBmB,IAUoBtC,aAAckB,QCxC5CsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9edbc499.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Row({ employee, id }) {\n  return (\n      <tr>\n        <td>{employee.name.first}</td>\n        <td>{employee.name.last}</td>\n        <td>{employee.email}</td>\n        <td>\n          <img src={employee.picture.thumbnail} alt={employee.name.first} />\n        </td>\n      </tr>\n  );\n}\nexport default Row;\n","import React from \"react\";\nimport Row from \"./Row.js\";\nimport \"./EmployeeTable.css\";\nimport Table from \"react-bootstrap/Table\";\n\nexport default function EmployeeTable({ employeeList, handleSort }) {\n  return (\n    <div className=\"tableContainer\">\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th className=\"clickable\" onClick={() => handleSort(\"name.first\")}>\n              Name\n            </th>\n            <th className=\"clickable\" onClick={() => handleSort(\"name.last\")}>\n              Surame\n            </th>\n            <th className=\"clickable\" onClick={() => handleSort(\"email\")}>\n              Email\n            </th>\n            <th>Picture</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employeeList.map((employee) => {\n            return <Row key={employee.email} employee={employee} />;\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import \"./Search.css\";\n\nconst Search = ({ searchWord, setSearchWord, handleChange }) => {\n  return (\n    <div className=\"searchContainer\">\n      <div id=\"header\">\n        <div className=\"apptitle\">\n          <span className=\"title\"> Employee Directory</span>\n          <span className=\"instructions\">\n            Search an employee by typing the employee's name in the search bar\n            below <br></br>\n            Sort in alphabetical order by clicking on the either Name, Surname,\n            or Email\n          </span>\n        </div>\n      </div>\n      <div className=\"bardiv\">\n        <input\n          className=\"searchbar\"\n          type=\"text\"\n          placeholder=\"Enter employee's name\"\n          value={searchWord}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","// eslint-disable-next-line\n// import logo from \"./logo.svg\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport EmployeeTable from \"./components/EmployeeTable.js\";\nimport axios from \"axios\";\nimport Search from \"./components/Search\";\nimport sortBy from \"lodash/sortBy\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//setEmployeeList function that assigns value\n//employeeList contains all the data after the data is assigned\nfunction App() {\n  const [employeeList, setEmployeeList] = useState([]);\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://randomuser.me/api/?results=20&nat=us,gb,ca,au\")\n      .then((response) => {\n        // handle success\n        setEmployeeList(response.data.results);\n        setFilteredEmployees(response.data.results);\n      })\n      .catch((error) => {\n        // handle error\n        console.log(error);\n      });\n  }, []);\n\n  const handleChange = (event) => {\n    const inputSearch = event.target.value;\n    setSearchWord(inputSearch);\n    let results = employeeList.filter((employee) => {\n      const firstN = employee.name.first.toLowerCase();\n      return firstN.includes(inputSearch.toLowerCase());\n    });\n    setFilteredEmployees(results);\n  };\n\n  const handleSort = (columnName) => {\n    const sortedEmployees = sortBy(filteredEmployees, [columnName]);\n    setFilteredEmployees(sortedEmployees);\n  };\n\n  return (\n    <div className=\"App\">\n      <Search\n        handleChange={handleChange}\n        searchWord={searchWord}\n        setSearchWord={setSearchWord}\n      />\n      <EmployeeTable handleSort={handleSort} employeeList={filteredEmployees} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}